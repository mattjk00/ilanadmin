{"version":3,"sources":["index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","PostCard","props","state","selected","imgUrlValue","selectedLink","handleChange","bind","textChanged","buttonClick","e","val","this","setState","target","value","name","newProps","newv","content","img_src","updateFeatured","item","src","width","height","Date","now","style","padding","link","displayText","id","onChange","allLinks","map","i","uid","variant","label","color","onClick","React","Component","AdminPanel","featuredRef","collection","linksRef","featured","a","auth","currentUser","console","log","get","snapshot","feat","forEach","doc","push","data","sort","b","order","linkSnapshot","links","length","link_id","where","ref","update","container","spacing","renderCard","LoginForm","username","password","usernameTextChanged","passwordTextChanged","login","signInWithEmailAndPassword","then","usercred","reAuth","catch","err","type","NavBar","position","App","checkAuth","mainchunk","isAuth","onAuthStateChanged","user","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9cde95ba.chunk.js","sourcesContent":["import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport Button from '@material-ui/core/Button';\r\nimport {AppBar,Toolbar,Typography, Container, Grid, CardContent, Card, TextField, CardMedia, Select, MenuItem, InputLabel} from '@material-ui/core/'\r\n\r\nimport firebase from 'firebase';\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAZVS4VPzvlkpopkhJrie1Onk7-RNe4mZs\",\r\n    authDomain: \"ilan-bc1b3.firebaseapp.com\",\r\n    projectId: \"ilan-bc1b3\",\r\n    storageBucket: \"ilan-bc1b3.appspot.com\",\r\n    messagingSenderId: \"715467029812\",\r\n    appId: \"1:715467029812:web:319a4b5762c6c742457961\"\r\n};\r\n  // Initialize Firebase\r\nvar app = firebase.initializeApp(firebaseConfig);\r\nlet db = firebase.firestore();\r\n\r\nclass PostCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selected:1,\r\n            imgUrlValue:\"\",\r\n            selectedLink:\"\",\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.textChanged = this.textChanged.bind(this);\r\n        this.buttonClick = this.buttonClick.bind(this);\r\n    }\r\n    handleChange(e, val) {\r\n        this.setState({selected: e.target.value, selectedLink:val.props.name});\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        const newv = newProps.content ? newProps.content.img_src : \"logo192.png\";\r\n        \r\n        //this.setState({imgUrlValue:''});\r\n        this.setState({imgUrlValue:newv});\r\n        \r\n    }\r\n\r\n    buttonClick() {\r\n        this.props.updateFeatured(this.state, this.props.value);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        //console.log(this.state);\r\n    }\r\n\r\n    textChanged(e) {\r\n        this.setState({imgUrlValue:e.target.value});\r\n        \r\n    }\r\n\r\n    imgSrc() {\r\n        return this.props.content ? this.props.content.img_src : \"logo192.png\";\r\n    }\r\n\r\n    render() {\r\n        return <Grid item>\r\n            <Card>\r\n                <img src={this.state.imgUrlValue} key={Date.now()} width=\"192px\" height=\"192px\"/>\r\n                <CardContent style={{padding:\"25px\"}}>\r\n                    <Typography>{\r\n                        this.props.content ? this.props.content.link.displayText : \"...\"}</Typography>\r\n                    <form key={this.props.value}>\r\n                    <InputLabel id=\"\">Song/Album</InputLabel>\r\n                    <Select\r\n                        value={this.state.selected}\r\n                        onChange={this.handleChange}\r\n                    >\r\n                        {\r\n                        //this.props.featured.map((ft, i) => <MenuItem value={ft.link_id} key={ft.link_id}>{ft.link.displayText}</MenuItem>)\r\n                        this.props.allLinks.map((link, i) => <MenuItem value={link.displayText} name={link.uid} key={link.uid}>{link.displayText}</MenuItem>)\r\n                        }\r\n                    </Select>\r\n                    <br/>\r\n                    <br/>\r\n                    <TextField onChange={this.textChanged} variant=\"outlined\" label=\"image url\" value={this.state.imgUrlValue}></TextField>\r\n                    </form>\r\n                </CardContent>\r\n                <Button color=\"primary\" onClick={this.buttonClick}>Save</Button>\r\n            </Card>\r\n        </Grid>\r\n    }\r\n}\r\n\r\nclass AdminPanel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const featuredRef = db.collection('featured');\r\n        const linksRef = db.collection('links');\r\n        this.state = {\r\n            featuredRef:featuredRef,\r\n            linksRef:linksRef,\r\n            featured:[],\r\n            allLinks:[]\r\n        }\r\n        this.updateFeatured = this.updateFeatured.bind(this);\r\n    }\r\n    async componentDidMount() {\r\n\r\n        let a = firebase.auth().currentUser;\r\n        console.log(a);\r\n\r\n        const snapshot = await this.state.featuredRef.get();\r\n        let feat = [];\r\n        snapshot.forEach(doc => {\r\n            feat.push(doc.data());\r\n        });\r\n        feat.sort((a, b) => (a.order > b.order) ? 1 : -1);\r\n\r\n        const linkSnapshot = await this.state.linksRef.get();\r\n        let links = [];\r\n        linkSnapshot.forEach(doc => {\r\n            for (let i = 0; i < feat.length; i++) {\r\n                if (feat[i].link_id === doc.data().uid) {\r\n                    feat[i].link = doc.data();\r\n                }\r\n                \r\n            }\r\n            links.push(doc.data());\r\n        });\r\n\r\n        this.setState({featured:feat, allLinks:links});\r\n    }\r\n\r\n    renderCard(i) {\r\n        return <PostCard value={i} content={this.state.featured[i]} featured={this.state.featured} allLinks={this.state.allLinks} updateFeatured={this.updateFeatured}/>\r\n    }\r\n    handleClick() {\r\n\r\n    }\r\n\r\n    async updateFeatured(data, i) {\r\n        //console.log(\"UPDATE\", data, \"\\n\", i);\r\n        const query = await this.state.featuredRef.where('order', '==', i).get();\r\n        query.forEach(doc => {\r\n            console.log(doc.id, '=>', doc.data());\r\n            const res = doc.ref.update({img_src:data.imgUrlValue, link_id:data.selectedLink});\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            <Grid item>\r\n                <Grid container spacing={2}>\r\n                    {this.renderCard(0)}\r\n                    {this.renderCard(1)}\r\n                    {this.renderCard(2)}\r\n                    {this.renderCard(3)}\r\n                    {this.renderCard(4)}\r\n                    {this.renderCard(5)}\r\n                    {this.renderCard(6)}\r\n                    {this.renderCard(7)}\r\n                </Grid>\r\n                \r\n            </Grid>\r\n        </div>\r\n        \r\n    }\r\n}\r\n\r\nclass LoginForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username:\"\",\r\n            password:\"\"\r\n        };\r\n        this.usernameTextChanged = this.usernameTextChanged.bind(this);\r\n        this.passwordTextChanged = this.passwordTextChanged.bind(this);\r\n        this.login = this.login.bind(this);\r\n    }\r\n\r\n    usernameTextChanged(e) {\r\n        this.setState({username:e.target.value});\r\n    }\r\n\r\n    passwordTextChanged(e) {\r\n        this.setState({password:e.target.value});\r\n    }\r\n\r\n    login() {\r\n        console.log(this.state);\r\n\r\n        firebase.auth().signInWithEmailAndPassword(this.state.username, this.state.password)\r\n            .then((usercred) => {\r\n                console.log(\"Success\");\r\n                this.props.reAuth();\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (<div>\r\n            <Typography>LOGIN</Typography>\r\n            <Card>\r\n                <CardContent>\r\n                    <form>\r\n                        <TextField label=\"Username\" onChange={this.usernameTextChanged} value={this.state.username}></TextField><br/>\r\n                        <TextField label=\"Password\" onChange={this.passwordTextChanged} value={this.state.password} type=\"password\"></TextField><br/><br/>\r\n                        <Button color=\"primary\" onClick={this.login}>Login</Button>\r\n                    </form>\r\n                </CardContent>\r\n            </Card>\r\n            </div>)\r\n    }\r\n}\r\n\r\n\r\nfunction NavBar(props) {\r\n    return <AppBar position=\"static\">\r\n    <Toolbar>\r\n      <Typography variant=\"h6\" >\r\n        Ilan Admin\r\n      </Typography>\r\n    </Toolbar>\r\n  </AppBar>;\r\n}\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            auth:false\r\n        }\r\n        this.checkAuth = this.checkAuth.bind(this);\r\n    }\r\n    render() {\r\n\r\n        let mainchunk = <AdminPanel/>\r\n        if (!this.state.auth) {\r\n            mainchunk = <LoginForm reAuth={this.checkAuth}/>\r\n        }\r\n\r\n        return <div>\r\n            <Container>\r\n                <NavBar/><br/>\r\n                {mainchunk}\r\n            </Container>\r\n        </div>\r\n    }\r\n    componentDidMount() {\r\n        this.checkAuth();\r\n    }\r\n\r\n    async checkAuth() {\r\n        //let isAuth = firebase.auth().currentUser != null;\r\n\r\n        let isAuth = false;\r\n        await firebase.auth().onAuthStateChanged((user) => {\r\n            if (user) {\r\n                isAuth = true;\r\n            }\r\n        });\r\n\r\n        console.log(\"Auth\", isAuth);\r\n        this.setState({auth:isAuth});\r\n    }\r\n}\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}